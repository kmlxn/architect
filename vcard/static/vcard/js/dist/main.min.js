/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

	'use strict';
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Handler = function () {
	    function Handler() {
	        _classCallCheck(this, Handler);
	    }
	
	    _createClass(Handler, [{
	        key: 'run',
	        value: function run() {
	            this.cache_dom();
	            this.bind_events();
	        }
	    }, {
	        key: 'cache_dom',
	        value: function cache_dom() {
	            this.$projects_nav = $('a#projects_nav');
	            this.$contacts_nav = $('a#contacts_nav');
	            this.$about_me_nav = $('a#about_me_nav');
	            this.$content = $('#content');
	            this.template = this.$content.find('[type="text/mustache_template"]').html();
	        }
	    }, {
	        key: 'bind_events',
	        value: function bind_events() {
	            this.$projects_nav.click(this.get_and_view_projects_tags.bind(this));
	            this.$contacts_nav.click(this.get_and_view_contacts_info.bind(this));
	            this.$about_me_nav.click(this.get_and_view_about_me_text.bind(this));
	            this.$content.on('click', '#projects_tags a', this.get_and_view_projects.bind(this));
	            this.$content.magnificPopup({
	                delegate: '.photo a',
	                type: 'ajax',
	                callbacks: { ajaxContentAdded: this.handle_popup.bind(this) }
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var rendered = Mustache.render(this.template, this.data);
	            this.$content.html(rendered);
	        }
	    }, {
	        key: 'get_and_view_projects_tags',
	        value: function get_and_view_projects_tags(event) {
	            var _this = this;
	
	            $.get("/get_tags/").done(function (tags) {
	                _this.data = {
	                    tags: tags,
	                    has_tags: true
	                };
	
	                _this.render();
	            });
	
	            event.preventDefault();
	        }
	    }, {
	        key: 'get_and_view_contacts_info',
	        value: function get_and_view_contacts_info(event) {
	            var _this2 = this;
	
	            $.get("/get_contacts/").done(function (contacts) {
	                _this2.data = { contacts: contacts };
	                _this2.render();
	            });
	
	            event.preventDefault();
	        }
	    }, {
	        key: 'get_and_view_about_me_text',
	        value: function get_and_view_about_me_text(event) {
	            var _this3 = this;
	
	            $.get("/get_about_me_text/").done(function (about_me) {
	                _this3.data = { about_me: about_me };
	                _this3.render();
	            });
	
	            event.preventDefault();
	        }
	    }, {
	        key: 'prepare_projects',
	        value: function prepare_projects(projects) {
	            return projects.map(function (project) {
	                project.main_picture = project.pictures[0];
	                return project;
	            });
	        }
	    }, {
	        key: 'get_and_view_projects',
	        value: function get_and_view_projects(event) {
	            var _this4 = this;
	
	            var tag_url_name = event.currentTarget.id;
	
	            $.get('/get_projects/' + tag_url_name + '/').done(function (projects) {
	                _this4.data = {
	                    has_tags: true,
	                    tags: _this4.data.tags,
	                    projects: _this4.prepare_projects(projects)
	                };
	
	                _this4.render();
	            });
	
	            event.preventDefault();
	        }
	    }, {
	        key: 'handle_popup',
	        value: function handle_popup() {
	            var projectPopupHandler = new ProjectPopupHandler();
	            projectPopupHandler.run();
	        }
	    }]);
	
	    return Handler;
	}();
	
	var ProjectPopupHandler = function () {
	    function ProjectPopupHandler() {
	        _classCallCheck(this, ProjectPopupHandler);
	    }
	
	    _createClass(ProjectPopupHandler, [{
	        key: 'run',
	        value: function run() {
	            this.cache_dom();
	            this.bind_events();
	            this.prepare_state();
	            this.render();
	        }
	    }, {
	        key: 'cache_dom',
	        value: function cache_dom() {
	            this.$project_details = $('#project_details');
	            this.$picture_preview = this.$project_details.find('#picture_preview img');
	            this.$pictures = this.$project_details.find('#additional_pictures a');
	        }
	    }, {
	        key: 'bind_events',
	        value: function bind_events() {
	            this.$pictures.click(this.preview_picture.bind(this));
	        }
	    }, {
	        key: 'prepare_state',
	        value: function prepare_state() {
	            this.$active_picture = this.$pictures.first();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            this.$picture_preview.attr('src', this.$active_picture.attr('href'));
	            this.$picture_preview.parent().attr('href', this.$active_picture.attr('href'));
	            this.$active_picture.addClass('active');
	            this.$active_picture.siblings().removeClass('active');
	        }
	    }, {
	        key: 'preview_picture',
	        value: function preview_picture(event) {
	            event.preventDefault();
	            this.$active_picture = $(event.currentTarget);
	            this.render();
	        }
	    }]);
	
	    return ProjectPopupHandler;
	}();
	
	$(document).ready(function () {
	    var handler = new Handler();
	
	    handler.run();
	});

/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,